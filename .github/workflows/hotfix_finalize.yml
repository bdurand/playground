name: "* Hotfix: Finalize"
run-name: "Finalize Hotfix"

on:
  workflow_dispatch:

jobs:
  finalize:
    name: Finalize hotfix
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: hotfix
    steps:
      - name: Load local GitHub actions
        uses: actions/checkout@v3
        with:
          sparse-checkout: .github
      - name: Generate a token for the action app
        id: generate_token
        uses: tibdex/github-app-token@v1.8.0
        with:
          app_id: ${{ secrets.ACTION_APP_ID }}
          private_key: ${{ secrets.ACTION_APP_PRIVATE_KEY }}
      - name: Check for branch
        uses: actions/github-script@v6
        with:
          script: |
            try {
              await github.request('GET /repos/{owner}/{repo}/branches/{branch}', {
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: 'hotfix'
              });
            } catch (error) {
              if (error.status === 404) {
                core.setFailed('Hotfix not in progress');
                return
              } else {
                throw error;
              }
            }
      - name: Create release
        uses: ./.github/actions/create-next-release
        with:
          github-token: ${{ steps.generate_token.outputs.token }}
      - name: Delete branch
        uses: actions/github-script@v6
        with:
          script: |
            let sha = null;
            try {
              const { data: branchInfo } = await github.request('GET /repos/{owner}/{repo}/branches/{branch}', {
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: 'hotfix'
              });
              sha = branchInfo.commit.sha;
            } catch (error) {
              if (error.status !== 404) {
                throw error;
              }
              core.setFailed('No hotfix branch exists');
              return;
            }

            await github.request('DELETE /repos/{owner}/{repo}/git/refs/heads/{branch}', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: 'hotfix'
            });
            core.notice('Deleted hotfix branch');
