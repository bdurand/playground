name: "* Hotfix: Create"
run-name: "Create Hotfix From ${{ github.event.inputs.tag || 'Latest Release' }}"

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Tag to create hotfix from (defaults to the current release)
        required: false

jobs:
  create:
    name: Create hotfix
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: hotfix
    steps:
      - name: Get Release SHA
        id: get_release_sha
        uses: actions/github-script@v6
        with:
          script: |
            try {
              await github.request('GET /repos/{owner}/{repo}/branches/{branch}', {
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: 'hotfix',
              });
              core.setFailed('Hotfix already in progress');
              return;
            } catch (error) {
              if (error.status !== 404) {
                throw error;
              }
            }

            let sha = null;
            let tag = context.payload.inputs?.tag;

            if (!tag) {
              try {
                const { data: releaseInfo } = await github.request('GET /repos/{owner}/{repo}/releases/latest', {
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                });
                tag = releaseInfo.tag_name;
              } catch (releaseError) {
                if (error.status !== 404) {
                  throw error;
                }
                core.setFailed('No release found');
                return;
              }
            }

            try {
              const { data: tagInfo } = await github.request('GET /repos/{owner}/{repo}/git/ref/tags/{tag}', {
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: tag,
              });
              sha = tagInfo.object.sha;
            } catch (tagError) {
              if (error.status !== 404) {
                throw error;
              }
              core.setFailed(`Tag ${tag} not found`);
              return;
            }

            core.setOutput('sha', sha);
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.get_release_sha.outputs.sha }}
          fetch-depth: 0
      - name: Create branch
        run: |
          git push origin HEAD:refs/heads/hotfix
