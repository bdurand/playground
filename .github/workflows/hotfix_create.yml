name: "* Hotfix: Create"
run-name: "Create Hotfix From ${{ github.event.inputs.tag || 'Latest Release' }}"

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Tag to create hotfix from (defaults to the current release)
        required: false

jobs:
  create:
    name: Create hotfix
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: hotfix
    steps:
      - name: Load local GitHub actions
        uses: actions/checkout@v3
        with:
          sparse-checkout: .github
      - name: Get release SHA
        id: release_sha
        uses: ./.github/actions/get-release-sha
        with:
          tag: ${{ github.event.inputs.tag }}
      - name: Generate a token for the action app
        id: generate_token
        uses: tibdex/github-app-token@v1.8.0
        with:
          app_id: ${{ secrets.ACTION_APP_ID }}
          private_key: ${{ secrets.ACTION_APP_PRIVATE_KEY }}
      - name: Create hotfix branch
        uses: actions/github-script@v6
        env:
          SHA: ${{ steps.release_sha.outputs.sha }}
        with:
          github-token: ${{ steps.generate_token.outputs.token }}
          script: |
            try {
              await github.request('GET /repos/{owner}/{repo}/branches/{branch}', {
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: 'hotfix'
              });
              core.setFailed('Hotfix already in progress');
              return;
            } catch (error) {
              if (error.status !== 404) {
                throw error;
              }
            }

            await github.request('POST /repos/{owner}/{repo}/git/refs', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/heads/hotfix',
              sha: process.env.SHA
            });
            core.notice('Created hotfix branch');