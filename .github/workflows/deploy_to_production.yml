name: "* Deploy To Production"
run-name: "Deploy To Production"

on:
  workflow_dispatch:
  release:
    types:
      - released

jobs:
  get-release:
    name: Get release
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.get_release.outputs.ref }}
      sha: ${{ steps.get_release.outputs.sha }}
    steps:
      - name: Load local GitHub actions
        uses: actions/checkout@v3
        with:
          sparse-checkout: .github
      - name: Get release SHA
        id: get_release
        uses: ./.github/actions/get-release-sha
        with:
          tag: ${{ github.event.inputs.tag || github.event.release.tag_name }}
  build-image:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: get-release
    if: ${{ needs.get-release.outputs.sha }}
    concurrency:
      group: "Build Docker image ${{ needs.get-release.outputs.sha }}"
    steps:
      - name: Load local GitHub actions
        uses: actions/checkout@v3
        with:
          sparse-checkout: .github
      - name: Build Docker image
        uses: ./.github/actions/build-docker-image
        with:
          ref: ${{ needs.get-release.outputs.ref }}
          sha: ${{ needs.get-release.outputs.sha }}
  deploy:
    name: Deploy to production
    runs-on: ubuntu-latest
    needs:
      - get-release
      - build-image
    if: ${{ needs.get-release.outputs.sha }}
    concurrency:
      group: "Deploy to production"
      cancel-in-progress: true
    environment: production
    steps:
      - name: Load local GitHub actions
        uses: actions/checkout@v3
        with:
          sparse-checkout: .github
      - name: Deploy application
        uses: ./.github/actions/deploy-application
        with:
          ref: ${{ needs.get-release.outputs.ref }}
          sha: ${{ needs.get-release.outputs.sha }}
